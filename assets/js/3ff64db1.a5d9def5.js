"use strict";(self.webpackChunkzkpool_doc=self.webpackChunkzkpool_doc||[]).push([[889],{3905:(e,t,r)=>{r.d(t,{Zo:()=>f,kt:()=>h});var o=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,i=function(e,t){if(null==e)return{};var r,o,i={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},f=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),p=c(r),u=i,h=p["".concat(l,".").concat(u)]||p[u]||d[u]||n;return r?o.createElement(h,a(a({ref:t},f),{},{components:r})):o.createElement(h,a({ref:t},f))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,a=new Array(n);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<n;c++)a[c]=r[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5530:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var o=r(7462),i=(r(7294),r(3905));const n={sidebar_label:"PoS-Based Verifiers",sidebar_position:3},a="PoS-Based Verifiers",s={unversionedId:"ZKPool-2.0/technology/PoS-based-verifiers",id:"ZKPool-2.0/technology/PoS-based-verifiers",title:"PoS-Based Verifiers",description:"Proofs need to be verified within the network before being sent back or retrieved by the requester for the following reasons:",source:"@site/docs/ZKPool-2.0/technology/PoS-based-verifiers.md",sourceDirName:"ZKPool-2.0/technology",slug:"/ZKPool-2.0/technology/PoS-based-verifiers",permalink:"/ZKPool-2.0/technology/PoS-based-verifiers",draft:!1,editUrl:"https://github.com/aoraki-labs/zkpool-doc/tree/main/docs/ZKPool-2.0/technology/PoS-based-verifiers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"PoS-Based Verifiers",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Graph-Based Computation  Tasks Scheduling",permalink:"/ZKPool-2.0/technology/graph-based-computation-tasks-scheduling"},next:{title:"Guide",permalink:"/category/guide"}},l={},c=[],f={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pos-based-verifiers"},"PoS-Based Verifiers"),(0,i.kt)("p",null,"Proofs need to be verified within the network before being sent back or retrieved by the requester for the following reasons:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"If a proof is invalid, the network can reassign the task to another prover."),(0,i.kt)("li",{parentName:"ol"},"Rewards are only distributed to provers who produce valid proofs."),(0,i.kt)("li",{parentName:"ol"},"Verifying proofs enhances the network's trustworthiness.")),(0,i.kt)("p",null,"A decentralized network of verifier nodes will be established to reach a consensus on proof settlement. A node offers greater flexibility than a verifier contract because not all projects have a Solidity version of verification code. Verifying the batched proof can further reduce the cost. The mechanism will resemble Ethereum's proof of stake but likely in a simpler form. The process is as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"PoS-Based Verifiers",src:r(3823).Z,width:"2000",height:"1890"}),(0,i.kt)("em",{parentName:"p"},"PoS-Based Verifiers Flow")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"ZK projects supply the verifier code, which can be in different languages."),(0,i.kt)("li",{parentName:"ol"},"Either the ZK project or the community operates one or more verifier nodes."),(0,i.kt)("li",{parentName:"ol"},"To ensure the verifier's good intentions, a minimal deposit is required as staking asset."),(0,i.kt)("li",{parentName:"ol"},"Galactic contract or Oracle node aggregates proofs and produce an batchedProof"),(0,i.kt)("li",{parentName:"ol"},"The Galactic contract or Oracle node uses a VRF to select a committee of verifier nodes for the batchedProof."),(0,i.kt)("li",{parentName:"ol"},"The verifier nodes carry out the proof verification and submit their results to the Galactic contract or Oracle node within a specified timeframe."),(0,i.kt)("li",{parentName:"ol"},"If a majority of the committee (for example, 2/3) reach a consensus, and if correct, all proofs in the batched proof are considered verified as either valid, if not then iterate to verify each proof."),(0,i.kt)("li",{parentName:"ol"},"Honest verifier nodes are equally rewarded, while dishonest ones are penalized."),(0,i.kt)("li",{parentName:"ol"},"The verifier's reputation is updated based on their actions.")),(0,i.kt)("p",null,"We choose a verifier network over a DAO which handles challenges in an optimistic manner for the following reasons:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"ZK verification is quick and cost-effective."),(0,i.kt)("li",{parentName:"ol"},"Verification consensus can be achieved rapidly because it depends on the L3 block proposing speed, which can be significantly fast."),(0,i.kt)("li",{parentName:"ol"},"It takes longer for a DAO to settle a proof if a challenge arises."),(0,i.kt)("li",{parentName:"ol"},"In both scenarios, verification codes from various ZK projects are required.")),(0,i.kt)("p",null,"However, if there's a conflict between the PoS-Based verification results and the requestors' verification results, we'll need the governance DAO to handle such an issue."),(0,i.kt)("p",null,"Additionally, using an existing platform like EigenLayer is an option for us."))}d.isMDXComponent=!0},3823:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/PoS-verifier-flow-25ca64518717e4fdaaf84cded41d124b.png"}}]);